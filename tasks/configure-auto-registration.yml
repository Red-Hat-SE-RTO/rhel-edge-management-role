---
- name: Configure auto registration 
  block:
  - name: Login to registry.redhat.io
    containers.podman.podman_login:
      username: "{{ rh_authentication_basic_username }}"
      password: '{{ rh_authentication_basic_password }}'
      registry: registry.redhat.io

  - name: Check if iso download directory exists
    stat:
      path: "{{ iso_download_directory }}"
    register: download_dir_exists

  - name: Check for  iso download directory
    debug:
      msg: "The {{ iso_download_directory }} exists"
    when: download_dir_exists.stat.exists

  - name: Creates directory
    file:
      path: "{{ iso_download_directory }}"
      state: directory
      mode: '0777'
    when: download_dir_exists.stat.exists == false

  - name: Setting permissions on data folder
    ansible.builtin.command:  setfacl -m u:26:-wx {{ iso_download_directory }}
    become: yes
    become_user: root

  - name: Check if iso exists
    stat:
      path: "{{ iso_download_directory }}/{{ image_name  }}.iso"
    register: check_if_iso_exists

  - name: Does the iso exisit
    debug:
      msg: "The iso exists"
    when: check_if_iso_exists.stat.exists

  - name: fail when iso does not exist
    fail: 
      msg: "{{ iso_download_directory }}/{{ image_name  }}.iso does not exist"
    when: check_if_iso_exists.stat.exists == false

  - name: Copy fleet source iso
    copy:
      src: "{{ iso_download_directory }}/{{ image_name }}.iso"
      dest: "{{ workspace }}/fleet_source.iso"
      remote_src: yes

  - name:  Populating fleet_rhc_vars
    copy:
      dest: "{{ workspace }}/fleet_rhc_vars"
      content: |
        RHC_ORGID={{ rhc_org_id }}
        RHC_ACTIVATION_KEY={{ rhc_activation_key }}
        RHC_FIRSTBOOT=true

  - name: Download kickstart
    get_url:
      url: "{{ kickstart_path }}"
      dest: "{{ workspace }}/fleet.kspost"
    when: enable_kickstart == true

  - name: Run fleet-management container 
    containers.podman.podman_container:
      name: fleet-iso-util-1
      image: quay.io/fleet-management/fleet-iso-util:latest
      restart_policy: always
      state: started
      interactive: yes
      rm: yes
      volume:
        -  "{{ workspace }}/:/isodir:Z"
      detach: no
    when: enable_kickstart == false
    
  - name: Run fleet-management container 
    containers.podman.podman_container:
      name: fleet-iso-util-1
      image: quay.io/fleet-management/fleet-iso-util:latest
      restart_policy: always
      state: started
      interactive: yes
      rm: yes
      volume:
        -  "{{ workspace }}/:/isodir:Z"
      detach: no
    when: enable_kickstart == true

  - name: Copy fleet source iso
    copy:
      src: "{{ workspace }}/fleet_source.iso"
      dest: "{{ iso_download_directory }}/{{ image_name }}_fleet_out.iso"
      remote_src: yes

  - name: Remove fleet source iso 
    ansible.builtin.file:
      path: "{{ workspace }}/fleet_source.iso"
      state: absent


  tags:
  - configure_auto_registration